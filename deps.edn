{:paths
 ["src" "resources"]

 :deps
 {commons-io/commons-io       {:mvn/version "2.18.0"}
  eftest/eftest               {:mvn/version "0.6.0"}
  environ/environ             {:mvn/version "1.2.0"}
  methodical/methodical       {:mvn/version "1.0.124"}
  pjstadig/humane-test-output {:mvn/version "0.11.0"}
  prismatic/schema            {:mvn/version "1.4.1"}
  metosin/malli               {:mvn/version "0.17.0"}
  org.clojure/algo.generic    {:mvn/version "1.0.1"}
  org.clojure/java.classpath  {:mvn/version "1.1.0"}
  org.clojure/tools.namespace {:mvn/version "1.5.0"}}

 :aliases
 {:dev
  {:extra-paths ["test"]}

  ;; clj -X:dev:test
  :test
  {:exec-fn   mb.hawk.core/find-and-run-tests-cli
   :exec-args {:exclude-directories ["src" "resources"]}}

  ;; clojure -T:build
  :build
  {:deps       {io.github.clojure/tools.build {:mvn/version "0.10.6"}
                slipset/deps-deploy           {:mvn/version "0.2.2"}}
   :ns-default build}

  ;; clojure -M:kondo --lint src test
  ;;
  ;; clojure -M:kondo --version
  ;;
  ;; clojure -M:kondo --copy-configs --dependencies --lint "$(clojure -A:dev -Spath)" --skip-lint --parallel
  ;;
  ;; Run Kondo from the JVM using the pinned version. Preferable to running the installed command since we can pin the
  ;; version here which may be different from the version installed on your computer.
  :kondo
  {:replace-deps
   {clj-kondo/clj-kondo {:mvn/version "2024.08.29"}}

   :main-opts
   ["-m" "clj-kondo.main"]}

  :ci
  {:jvm-opts ["-Dhawk.mode" "cli/ci"]}

  ;; Find outdated versions of dependencies. Run with `clojure -M:outdated`
  :outdated {;; Note that it is `:deps`, not `:extra-deps`
             :deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
             :main-opts ["-m" "antq.core" "--skip=github-action"]}}}
